{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/minorProject/personal-task-manager/frontend/src/pages/TaskPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const TaskPage = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [title, setTitle] = useState('');\n//   const [editMode, setEditMode] = useState(false);\n//   const [editId, setEditId] = useState(null);\n\n//   const fetchTasks = async () => {\n//     const token = localStorage.getItem('token');\n//     const res = await axios.get('http://localhost:5000/api/tasks', {\n//       headers: { Authorization: token }\n//     });\n//     setTasks(res.data);\n//   };\n\n//   const createTask = async () => {\n//     const token = localStorage.getItem('token');\n//     await axios.post('http://localhost:5000/api/tasks', { title }, {\n//       headers: { Authorization: token }\n//     });\n//     setTitle('');\n//     fetchTasks();\n//   };\n\n//   const saveUpdatedTask = async () => {\n//     const token = localStorage.getItem('token');\n//     await axios.put(`http://localhost:5000/api/tasks/${editId}`, { title }, {\n//       headers: { Authorization: token }\n//     });\n//     setTitle('');\n//     setEditMode(false);\n//     setEditId(null);\n//     fetchTasks();\n//   };\n\n//   const toggleComplete = async (id, completed) => {\n//     const token = localStorage.getItem('token');\n//     await axios.put(`http://localhost:5000/api/tasks/${id}`, { completed: !completed }, {\n//       headers: { Authorization: token }\n//     });\n//     fetchTasks();\n//   };\n\n//   const deleteTask = async (id) => {\n//     const token = localStorage.getItem('token');\n//     await axios.delete(`http://localhost:5000/api/tasks/${id}`, {\n//       headers: { Authorization: token }\n//     });\n//     fetchTasks();\n//   };\n\n//   const startEdit = (task) => {\n//     setTitle(task.title);\n//     setEditId(task._id);\n//     setEditMode(true);\n//   };\n\n//   useEffect(() => { fetchTasks(); }, []);\n\n// return (\n//   <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-100 to-purple-200\">\n//     <div className=\"bg-white shadow-xl rounded-xl p-8 w-full max-w-xl\">\n//       <h1 className=\"text-3xl font-bold text-center mb-6 text-indigo-700\">Your Tasks</h1>\n\n//       <div className=\"flex mb-6\">\n//         <input\n//           className=\"border border-gray-300 rounded-l px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-indigo-400\"\n//           placeholder={editMode ? \"Edit task\" : \"New task\"}\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//         />\n//         {editMode ? (\n//           <button\n//             onClick={saveUpdatedTask}\n//             className=\"bg-green-500 hover:bg-green-600 text-white px-4 rounded-r\"\n//           >\n//             Update\n//           </button>\n//         ) : (\n//           <button\n//             onClick={createTask}\n//             className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 rounded-r\"\n//           >\n//             Add\n//           </button>\n//         )}\n//       </div>\n\n//       <ul className=\"space-y-3\">\n//         {tasks.map((task) => (\n//           <li\n//             key={task._id}\n//             className={`flex justify-between items-center px-4 py-3 rounded-lg shadow-sm ${\n//               task.completed ? 'bg-gray-200' : 'bg-indigo-100'\n//             }`}\n//           >\n//             <span\n//               className={`flex-1 cursor-pointer ${\n//                 task.completed ? 'line-through text-gray-500' : 'text-gray-800'\n//               }`}\n//               onClick={() => toggleComplete(task._id, task.completed)}\n//             >\n//               {task.title}\n//             </span>\n//             <div className=\"ml-2 flex gap-2\">\n//               <button\n//                 onClick={() => startEdit(task)}\n//                 className=\"text-yellow-600 hover:text-yellow-700\"\n//               >\n//                 Edit\n//               </button>\n//               <button\n//                 onClick={() => deleteTask(task._id)}\n//                 className=\"text-red-500 hover:text-red-600\"\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   </div>\n// )};\n\n// export default TaskPage;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const fetchTasks = async () => {\n    const token = localStorage.getItem('token');\n    const res = await axios.get('http://localhost:5000/api/tasks', {\n      headers: {\n        Authorization: token\n      }\n    });\n    setTasks(res.data);\n  };\n  const createTask = async () => {\n    const token = localStorage.getItem('token');\n    await axios.post('http://localhost:5000/api/tasks', {\n      title\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setTitle('');\n    fetchTasks();\n  };\n  const saveUpdatedTask = async () => {\n    const token = localStorage.getItem('token');\n    await axios.put(`http://localhost:5000/api/tasks/${editId}`, {\n      title\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setTitle('');\n    setEditMode(false);\n    setEditId(null);\n    fetchTasks();\n  };\n  const toggleComplete = async (id, completed) => {\n    const token = localStorage.getItem('token');\n    await axios.put(`http://localhost:5000/api/tasks/${id}`, {\n      completed: !completed\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    fetchTasks();\n  };\n  const deleteTask = async id => {\n    const token = localStorage.getItem('token');\n    await axios.delete(`http://localhost:5000/api/tasks/${id}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    fetchTasks();\n  };\n  const startEdit = task => {\n    setTitle(task.title);\n    setEditId(task._id);\n    setEditMode(true);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-100 to-purple-200\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-xl rounded-xl p-8 w-full max-w-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center mb-6 text-indigo-700\",\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"border border-gray-300 rounded-l px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-indigo-400\",\n          placeholder: editMode ? \"Edit task\" : \"New task\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveUpdatedTask,\n          className: \"bg-green-500 hover:bg-green-600 text-white px-4 rounded-r\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createTask,\n          className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 rounded-r\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-3\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `flex justify-between items-center px-4 py-3 rounded-lg shadow-sm transition ${task.completed ? 'bg-green-100' : 'bg-indigo-100'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `flex-1 ${task.completed ? 'line-through text-gray-500' : 'text-gray-800'}`,\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-2 flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleComplete(task._id, task.completed),\n              className: `text-sm px-2 py-1 rounded ${task.completed ? 'bg-gray-400 text-white hover:bg-gray-500' : 'bg-green-500 text-white hover:bg-green-600'}`,\n              children: task.completed ? 'Undo' : 'Completed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEdit(task),\n              className: \"text-yellow-600 hover:text-yellow-700\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task._id),\n              className: \"text-red-500 hover:text-red-600\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"sjpCSjJERLcbW4rJi649tt0kFTE=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","title","setTitle","editMode","setEditMode","editId","setEditId","fetchTasks","token","localStorage","getItem","res","get","headers","Authorization","data","createTask","post","saveUpdatedTask","put","toggleComplete","id","completed","deleteTask","delete","startEdit","task","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/home/user/Desktop/minorProject/personal-task-manager/frontend/src/pages/TaskPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const TaskPage = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [title, setTitle] = useState('');\n//   const [editMode, setEditMode] = useState(false);\n//   const [editId, setEditId] = useState(null);\n\n//   const fetchTasks = async () => {\n//     const token = localStorage.getItem('token');\n//     const res = await axios.get('http://localhost:5000/api/tasks', {\n//       headers: { Authorization: token }\n//     });\n//     setTasks(res.data);\n//   };\n\n//   const createTask = async () => {\n//     const token = localStorage.getItem('token');\n//     await axios.post('http://localhost:5000/api/tasks', { title }, {\n//       headers: { Authorization: token }\n//     });\n//     setTitle('');\n//     fetchTasks();\n//   };\n\n//   const saveUpdatedTask = async () => {\n//     const token = localStorage.getItem('token');\n//     await axios.put(`http://localhost:5000/api/tasks/${editId}`, { title }, {\n//       headers: { Authorization: token }\n//     });\n//     setTitle('');\n//     setEditMode(false);\n//     setEditId(null);\n//     fetchTasks();\n//   };\n\n//   const toggleComplete = async (id, completed) => {\n//     const token = localStorage.getItem('token');\n//     await axios.put(`http://localhost:5000/api/tasks/${id}`, { completed: !completed }, {\n//       headers: { Authorization: token }\n//     });\n//     fetchTasks();\n//   };\n\n//   const deleteTask = async (id) => {\n//     const token = localStorage.getItem('token');\n//     await axios.delete(`http://localhost:5000/api/tasks/${id}`, {\n//       headers: { Authorization: token }\n//     });\n//     fetchTasks();\n//   };\n\n//   const startEdit = (task) => {\n//     setTitle(task.title);\n//     setEditId(task._id);\n//     setEditMode(true);\n//   };\n\n//   useEffect(() => { fetchTasks(); }, []);\n\n\n\n// return (\n//   <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-100 to-purple-200\">\n//     <div className=\"bg-white shadow-xl rounded-xl p-8 w-full max-w-xl\">\n//       <h1 className=\"text-3xl font-bold text-center mb-6 text-indigo-700\">Your Tasks</h1>\n\n//       <div className=\"flex mb-6\">\n//         <input\n//           className=\"border border-gray-300 rounded-l px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-indigo-400\"\n//           placeholder={editMode ? \"Edit task\" : \"New task\"}\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//         />\n//         {editMode ? (\n//           <button\n//             onClick={saveUpdatedTask}\n//             className=\"bg-green-500 hover:bg-green-600 text-white px-4 rounded-r\"\n//           >\n//             Update\n//           </button>\n//         ) : (\n//           <button\n//             onClick={createTask}\n//             className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 rounded-r\"\n//           >\n//             Add\n//           </button>\n//         )}\n//       </div>\n\n//       <ul className=\"space-y-3\">\n//         {tasks.map((task) => (\n//           <li\n//             key={task._id}\n//             className={`flex justify-between items-center px-4 py-3 rounded-lg shadow-sm ${\n//               task.completed ? 'bg-gray-200' : 'bg-indigo-100'\n//             }`}\n//           >\n//             <span\n//               className={`flex-1 cursor-pointer ${\n//                 task.completed ? 'line-through text-gray-500' : 'text-gray-800'\n//               }`}\n//               onClick={() => toggleComplete(task._id, task.completed)}\n//             >\n//               {task.title}\n//             </span>\n//             <div className=\"ml-2 flex gap-2\">\n//               <button\n//                 onClick={() => startEdit(task)}\n//                 className=\"text-yellow-600 hover:text-yellow-700\"\n//               >\n//                 Edit\n//               </button>\n//               <button\n//                 onClick={() => deleteTask(task._id)}\n//                 className=\"text-red-500 hover:text-red-600\"\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   </div>\n// )};\n\n\n// export default TaskPage;\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst TaskPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [editId, setEditId] = useState(null);\n\n  const fetchTasks = async () => {\n    const token = localStorage.getItem('token');\n    const res = await axios.get('http://localhost:5000/api/tasks', {\n      headers: { Authorization: token }\n    });\n    setTasks(res.data);\n  };\n\n  const createTask = async () => {\n    const token = localStorage.getItem('token');\n    await axios.post('http://localhost:5000/api/tasks', { title }, {\n      headers: { Authorization: token }\n    });\n    setTitle('');\n    fetchTasks();\n  };\n\n  const saveUpdatedTask = async () => {\n    const token = localStorage.getItem('token');\n    await axios.put(`http://localhost:5000/api/tasks/${editId}`, { title }, {\n      headers: { Authorization: token }\n    });\n    setTitle('');\n    setEditMode(false);\n    setEditId(null);\n    fetchTasks();\n  };\n\n  const toggleComplete = async (id, completed) => {\n    const token = localStorage.getItem('token');\n    await axios.put(`http://localhost:5000/api/tasks/${id}`, { completed: !completed }, {\n      headers: { Authorization: token }\n    });\n    fetchTasks();\n  };\n\n  const deleteTask = async (id) => {\n    const token = localStorage.getItem('token');\n    await axios.delete(`http://localhost:5000/api/tasks/${id}`, {\n      headers: { Authorization: token }\n    });\n    fetchTasks();\n  };\n\n  const startEdit = (task) => {\n    setTitle(task.title);\n    setEditId(task._id);\n    setEditMode(true);\n  };\n\n  useEffect(() => { fetchTasks(); }, []);\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-blue-100 to-purple-200\">\n      <div className=\"bg-white shadow-xl rounded-xl p-8 w-full max-w-xl\">\n        <h1 className=\"text-3xl font-bold text-center mb-6 text-indigo-700\">Your Tasks</h1>\n\n        <div className=\"flex mb-6\">\n          <input\n            className=\"border border-gray-300 rounded-l px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-indigo-400\"\n            placeholder={editMode ? \"Edit task\" : \"New task\"}\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          {editMode ? (\n            <button\n              onClick={saveUpdatedTask}\n              className=\"bg-green-500 hover:bg-green-600 text-white px-4 rounded-r\"\n            >\n              Update\n            </button>\n          ) : (\n            <button\n              onClick={createTask}\n              className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 rounded-r\"\n            >\n              Add\n            </button>\n          )}\n        </div>\n\n        <ul className=\"space-y-3\">\n          {tasks.map((task) => (\n            <li\n              key={task._id}\n              className={`flex justify-between items-center px-4 py-3 rounded-lg shadow-sm transition ${\n                task.completed ? 'bg-green-100' : 'bg-indigo-100'\n              }`}\n            >\n              <span\n                className={`flex-1 ${\n                  task.completed ? 'line-through text-gray-500' : 'text-gray-800'\n                }`}\n              >\n                {task.title}\n              </span>\n              <div className=\"ml-2 flex gap-2\">\n                <button\n                  onClick={() => toggleComplete(task._id, task.completed)}\n                  className={`text-sm px-2 py-1 rounded ${\n                    task.completed\n                      ? 'bg-gray-400 text-white hover:bg-gray-500'\n                      : 'bg-green-500 text-white hover:bg-green-600'\n                  }`}\n                >\n                  {task.completed ? 'Undo' : 'Completed'}\n                </button>\n                <button\n                  onClick={() => startEdit(task)}\n                  className=\"text-yellow-600 hover:text-yellow-700\"\n                >\n                  Edit\n                </button>\n                <button\n                  onClick={() => deleteTask(task._id)}\n                  className=\"text-red-500 hover:text-red-600\"\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}